// Generated by view binder compiler. Do not edit!
package com.example.cattlediag.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.Button;
import android.widget.ScrollView;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.example.cattlediag.R;
import de.hdodenhof.circleimageview.CircleImageView;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class ActivityResultBinding implements ViewBinding {
  @NonNull
  private final ScrollView rootView;

  @NonNull
  public final Button btnResult;

  @NonNull
  public final CircleImageView imgResult;

  @NonNull
  public final TextView result;

  @NonNull
  public final TextView tvResultDesc;

  @NonNull
  public final TextView tvResultPreventation;

  @NonNull
  public final TextView tvResultTreatment;

  private ActivityResultBinding(@NonNull ScrollView rootView, @NonNull Button btnResult,
      @NonNull CircleImageView imgResult, @NonNull TextView result, @NonNull TextView tvResultDesc,
      @NonNull TextView tvResultPreventation, @NonNull TextView tvResultTreatment) {
    this.rootView = rootView;
    this.btnResult = btnResult;
    this.imgResult = imgResult;
    this.result = result;
    this.tvResultDesc = tvResultDesc;
    this.tvResultPreventation = tvResultPreventation;
    this.tvResultTreatment = tvResultTreatment;
  }

  @Override
  @NonNull
  public ScrollView getRoot() {
    return rootView;
  }

  @NonNull
  public static ActivityResultBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static ActivityResultBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.activity_result, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static ActivityResultBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.btn_result;
      Button btnResult = ViewBindings.findChildViewById(rootView, id);
      if (btnResult == null) {
        break missingId;
      }

      id = R.id.img_result;
      CircleImageView imgResult = ViewBindings.findChildViewById(rootView, id);
      if (imgResult == null) {
        break missingId;
      }

      id = R.id.result;
      TextView result = ViewBindings.findChildViewById(rootView, id);
      if (result == null) {
        break missingId;
      }

      id = R.id.tv_result_desc;
      TextView tvResultDesc = ViewBindings.findChildViewById(rootView, id);
      if (tvResultDesc == null) {
        break missingId;
      }

      id = R.id.tv_result_preventation;
      TextView tvResultPreventation = ViewBindings.findChildViewById(rootView, id);
      if (tvResultPreventation == null) {
        break missingId;
      }

      id = R.id.tv_result_treatment;
      TextView tvResultTreatment = ViewBindings.findChildViewById(rootView, id);
      if (tvResultTreatment == null) {
        break missingId;
      }

      return new ActivityResultBinding((ScrollView) rootView, btnResult, imgResult, result,
          tvResultDesc, tvResultPreventation, tvResultTreatment);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
